// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PublicTransportNavigator;

#nullable disable

namespace PublicTransportNavigator.Migrations
{
    [DbContext(typeof(PublicTransportNavigatorContext))]
    [Migration("20240927194516_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BusBusStop", b =>
                {
                    b.Property<long>("BusStopsId")
                        .HasColumnType("bigint");

                    b.Property<long>("BusesId")
                        .HasColumnType("bigint");

                    b.HasKey("BusStopsId", "BusesId");

                    b.HasIndex("BusesId");

                    b.ToTable("BusBusStop");
                });

            modelBuilder.Entity("DiscountUser", b =>
                {
                    b.Property<long>("DiscountsId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("DiscountsId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("DiscountUser");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.Bus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("FirstBusStopId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LastBusStopId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FirstBusStopId");

                    b.HasIndex("LastBusStopId");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.BusSeat", b =>
                {
                    b.Property<long>("BusId")
                        .HasColumnType("bigint");

                    b.Property<long>("SeatId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Available")
                        .HasColumnType("boolean");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.HasKey("BusId", "SeatId");

                    b.HasIndex("SeatId");

                    b.ToTable("BusSeat");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.BusStop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool?>("OnRequest")
                        .HasColumnType("boolean");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BusStops");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.Discount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("Percentage")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.Favourite", b =>
                {
                    b.Property<long>("BusStopId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("BusStopId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Favourite");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.History", b =>
                {
                    b.Property<long>("TicketId")
                        .HasColumnType("bigint");

                    b.Property<long>("TimetableInId")
                        .HasColumnType("bigint");

                    b.Property<long>("TimetableOffId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("Journey")
                        .HasColumnType("uuid");

                    b.HasKey("TicketId", "TimetableInId", "TimetableOffId", "UserId", "Journey");

                    b.HasIndex("TimetableInId");

                    b.HasIndex("TimetableOffId");

                    b.HasIndex("UserId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.Seat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("BusId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.ToTable("Seat");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<int?>("Time")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.Timetable", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BusId")
                        .HasColumnType("bigint");

                    b.Property<long>("BusStopId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Time")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("BusStopId");

                    b.ToTable("Timetables");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BusBusStop", b =>
                {
                    b.HasOne("PublicTransportNavigator.Models.BusStop", null)
                        .WithMany()
                        .HasForeignKey("BusStopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PublicTransportNavigator.Models.Bus", null)
                        .WithMany()
                        .HasForeignKey("BusesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiscountUser", b =>
                {
                    b.HasOne("PublicTransportNavigator.Models.Discount", null)
                        .WithMany()
                        .HasForeignKey("DiscountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PublicTransportNavigator.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.Bus", b =>
                {
                    b.HasOne("PublicTransportNavigator.Models.BusStop", "FirstBusStop")
                        .WithMany()
                        .HasForeignKey("FirstBusStopId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PublicTransportNavigator.Models.BusStop", "LastBusStop")
                        .WithMany()
                        .HasForeignKey("LastBusStopId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FirstBusStop");

                    b.Navigation("LastBusStop");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.BusSeat", b =>
                {
                    b.HasOne("PublicTransportNavigator.Models.Bus", "Bus")
                        .WithMany("BusSeats")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PublicTransportNavigator.Models.Seat", "Seat")
                        .WithMany()
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.BusStop", b =>
                {
                    b.HasOne("PublicTransportNavigator.Models.User", null)
                        .WithMany("FavouriteBusStops")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.Favourite", b =>
                {
                    b.HasOne("PublicTransportNavigator.Models.BusStop", "BusStop")
                        .WithMany()
                        .HasForeignKey("BusStopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PublicTransportNavigator.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusStop");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.History", b =>
                {
                    b.HasOne("PublicTransportNavigator.Models.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PublicTransportNavigator.Models.Timetable", "TimetableIn")
                        .WithMany()
                        .HasForeignKey("TimetableInId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PublicTransportNavigator.Models.Timetable", "TimetableOff")
                        .WithMany()
                        .HasForeignKey("TimetableOffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PublicTransportNavigator.Models.User", "User")
                        .WithMany("TravelHistory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");

                    b.Navigation("TimetableIn");

                    b.Navigation("TimetableOff");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.Seat", b =>
                {
                    b.HasOne("PublicTransportNavigator.Models.Bus", null)
                        .WithMany("SeatsInfo")
                        .HasForeignKey("BusId");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.Timetable", b =>
                {
                    b.HasOne("PublicTransportNavigator.Models.Bus", "Bus")
                        .WithMany("Timetables")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PublicTransportNavigator.Models.BusStop", "BusStop")
                        .WithMany("Timetables")
                        .HasForeignKey("BusStopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("BusStop");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.Bus", b =>
                {
                    b.Navigation("BusSeats");

                    b.Navigation("SeatsInfo");

                    b.Navigation("Timetables");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.BusStop", b =>
                {
                    b.Navigation("Timetables");
                });

            modelBuilder.Entity("PublicTransportNavigator.Models.User", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("FavouriteBusStops");

                    b.Navigation("TravelHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
